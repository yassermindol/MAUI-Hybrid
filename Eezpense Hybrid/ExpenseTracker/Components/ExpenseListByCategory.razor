@using System.Collections.ObjectModel
@using ExpenseTracker.Models.UI
@inject IJSRuntime JS

<ul class="list-group" style="flex:1; overflow-y:auto;">
    @foreach (var group in ItemsSource)
    {
        <li class="list-group-item" style="padding:0;padding-top:10px;background-color:var(--list-item-main-bg);" @key="group.CategoryId">
            <div style="display:flex; flex-direction:row; align-items:center; margin-left:10px;margin-right:10px;">
                <div style="display:flex; flex-direction:column; flex:1; cursor:pointer;margin-right:10px;">
                    <div style="display:flex; flex-direction:row;">
                        <label style="margin-bottom:4px;font-size:14px;font-weight:600;color:var(--text-color)">@group.Category</label>
                        <label style="margin-left:auto;margin-right:4px;font-size:14px;font-weight:600;color:var(--text-color)">@CurrencySymbol</label>
                        <label style="margin-right:8px;font-size:14px;font-weight:600;color:var(--text-color)"> @group.Total</label>
                    </div>
                </div>
            </div>

            @if (group.Expenses?.Any() == true)
            {
                <ul class="list-group mt-2">
                    @foreach (var expenseItem in group.Expenses)
                    {
                        <li class="list-group-item list-group-item-action" style="padding-left:12px;padding-right:8px;background-color:var(--list-sub-item-bg);"
                            @onclick="() => OnClickItem(expenseItem.ID)">
                            <div style="display:flex; flex-direction:column; flex:1; cursor:pointer;">
                                <div style="display:flex; flex-direction:row;flex:1;">
                                    <label style="margin-bottom:4px;font-size:14px;font-weight:500;color:var(--text-color)">@expenseItem.Category</label>
                                    <label style="margin-left:auto;margin-right:4px;font-size:14px;font-weight:500;color:var(--text-color)">@CurrencySymbol</label>
                                    <label style="margin-right:8px;font-size:14px;font-weight:500;color:var(--text-color)"> @expenseItem.AmountStr</label>
                                </div>
                                <div style="display:flex; flex-direction:row;flex:1;padding:0px;">
                                    <label style="margin-right:10px;flex:1;overflow:hidden;
                                            display:-webkit-box;
                                            -webkit-box-orient:vertical;
                                            -webkit-line-clamp:2;
                                            line-height:1.2em;
                                            font-size:14px;
                                            color:var(--text-color);
                                            text-overflow:ellipsis;">@expenseItem.Note</label>
                                    <label style="margin-left:auto;margin-right:4px;font-size:14px;color:var(--text-color)">@expenseItem.Date | </label>
                                    <label style="margin-right:8px;font-size:14px;color:var(--text-color)">@expenseItem.Time</label>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
        </li>
    }
</ul>

@code {

    [Parameter]
    public ObservableCollection<UiGroupByCategoryItem> ItemsSource { get; set; }

    [Parameter]
    public string CurrencySymbol { get; set; }

    private void OnClickItem(long expenseID)
    {
        if(ItemClicked.HasDelegate)
        {
            ItemClicked.InvokeAsync(expenseID);
        }
    }

    [Parameter]
    public EventCallback<long> ItemClicked { get; set; }

}
